services:
  postgres-primary:
    image: postgres:16-alpine
    container_name: postgres-primary
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=mydb
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
    volumes:
      - pg_primary_data:/var/lib/postgresql/data
      - ./init-primary.sh:/docker-entrypoint-initdb.d/init-primary.sh
    ports:
      - "5432:5432"
    networks:
      - pgnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-replica1:
    image: postgres:16-alpine
    container_name: postgres-replica1
    environment:
      - PGUSER=replicator
      - PGPASSWORD=secret
    command: |
      bash -c "
      rm -rf /var/lib/postgresql/data/*
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot_1 --host=postgres-primary --port=5432 -U replicator
      do
        echo 'Waiting for primary to be ready...'
        sleep 2
      done
      chown -R postgres:postgres /var/lib/postgresql/data
      chmod 0700 /var/lib/postgresql/data
      exec su-exec postgres postgres
      "
    volumes:
      - pg_replica1_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - pgnet
    depends_on:
      postgres-primary:
        condition: service_healthy

  postgres-replica2:
    image: postgres:16-alpine
    container_name: postgres-replica2
    environment:
      - PGUSER=replicator
      - PGPASSWORD=secret
    command: |
      bash -c "
      rm -rf /var/lib/postgresql/data/*
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot_2 --host=postgres-primary --port=5432 -U replicator
      do
        echo 'Waiting for primary to be ready...'
        sleep 2
      done
      chown -R postgres:postgres /var/lib/postgresql/data
      chmod 0700 /var/lib/postgresql/data
      exec su-exec postgres postgres
      "
    volumes:
      - pg_replica2_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - pgnet
    depends_on:
      postgres-primary:
        condition: service_healthy

  pgpool:
    image: pgpool/pgpool
    container_name: pgpool
    environment:
      - PGPOOL_PARAMS_LISTEN_ADDRESSES=*
      - PGPOOL_PARAMS_PORT=5432
      - PGPOOL_PARAMS_BACKEND_HOSTNAME0=postgres-primary
      - PGPOOL_PARAMS_BACKEND_PORT0=5432
      - PGPOOL_PARAMS_BACKEND_WEIGHT0=1
      - PGPOOL_PARAMS_BACKEND_FLAG0=ALWAYS_PRIMARY
      - PGPOOL_PARAMS_BACKEND_HOSTNAME1=postgres-replica1
      - PGPOOL_PARAMS_BACKEND_PORT1=5432
      - PGPOOL_PARAMS_BACKEND_WEIGHT1=1
      - PGPOOL_PARAMS_BACKEND_FLAG1=DISALLOW_TO_FAILOVER
      - PGPOOL_PARAMS_BACKEND_HOSTNAME2=postgres-replica2
      - PGPOOL_PARAMS_BACKEND_PORT2=5432
      - PGPOOL_PARAMS_BACKEND_WEIGHT2=1
      - PGPOOL_PARAMS_BACKEND_FLAG2=DISALLOW_TO_FAILOVER
      - PGPOOL_PARAMS_SR_CHECK_USER=admin
      - PGPOOL_PARAMS_SR_CHECK_PASSWORD=secret
      - PGPOOL_PARAMS_SR_CHECK_DATABASE=mydb
      - PGPOOL_PARAMS_HEALTH_CHECK_USER=admin
      - PGPOOL_PARAMS_HEALTH_CHECK_PASSWORD=secret
      - PGPOOL_PARAMS_HEALTH_CHECK_DATABASE=mydb
      - PGPOOL_PARAMS_HEALTH_CHECK_PERIOD=10
      - PGPOOL_PARAMS_HEALTH_CHECK_TIMEOUT=20
      - PGPOOL_PARAMS_HEALTH_CHECK_MAX_RETRIES=3
      - PGPOOL_PARAMS_LOAD_BALANCE_MODE=on
      - PGPOOL_PARAMS_ENABLE_POOL_HBA=off
      - PGPOOL_PARAMS_ALLOW_CLEAR_TEXT_FRONTEND_AUTH=on
      - PGPOOL_PARAMS_NUM_INIT_CHILDREN=32
      - PGPOOL_PARAMS_MAX_POOL=4
    ports:
      - "9999:5432"
    depends_on:
      postgres-primary:
        condition: service_healthy
    networks:
      - pgnet
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "5432"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s



volumes:
  pg_primary_data:
  pg_replica1_data:
  pg_replica2_data:

networks:
  pgnet:
    driver: bridge
